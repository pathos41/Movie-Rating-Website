@using MovieSite.Models
@using MovieSite.Services
@using Microsoft.AspNetCore.Components.Web
@inject JsonFileMovieService MovieService

<div class="container-fluid px-5" id="card-columns">
  <div class="row px-5">
    @*Loop through all movies and show each one in a bootstrap card*@
    @foreach (var movie in MovieService.GetMovies())
    {
      <div class="col-3 px-4">
        <div class="card my-3">
          <div class="card-img">
            <img src="@movie.Image" alt="" class="card-img-top w-100" />
          </div>
          <div class="card-body mb-3">
            <h5 class="card-title">@movie.Title</h5>
            <p class="card-text">@movie.Description.Split(".")[0]...</p>
          </div>
          <div class="card-footer">
            <small class="text-muted">
              <button @onclick="(e => SelectMovie(movie.Id))"
                      data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                More Info
              </button>
            </small>
          </div>
        </div>
      </div>
    }
  </div>
</div>

@*Show the pop up window when a movie is selected*@
@if(selectedMovie != null)
{
  <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="productTitle">@selectedMovie.Title</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="card">
            <div class="card-img" style="background-image: url('@selectedMovie.Image');">
            </div>
            <div class="card-body">
                <p class="card-text">@selectedMovie.Description</p>
            </div>
          </div>
        </div>
        <div class="modal-footer">
          <a class="btn btn-primary mr-5" href="@selectedMovie.Url">
            Watch trailer
          </a>
          @if (voteCount == 0)
          {
            <span>Be the first to vote!</span>
          }
          else
          {
            <span>@voteCount @voteLabel</span>
          }
          @for (int i = 1; i < 6; i++)
          {
            var currentStar = i;
            if (i <= currentRating)
            {
              <span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
            }
            else
            {
              <span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>
            }
          }
        </div>
      </div>
    </div>
  </div>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@code 
{
  Movie selectedMovie;
  string selectedMovieId;

  //Select a movie and get its current ratings
  void SelectMovie(string movieId)
  {
    selectedMovieId = movieId;
    selectedMovie = MovieService.GetMovies().First(x => x.Id == movieId);
    GetCurrentRating();
  }

  int currentRating = 0;
  int voteCount = 0;
  string voteLabel;

  void GetCurrentRating()
  {
    //Set the rating to 0 if there's no rating yet
    if(selectedMovie.Ratings == null)
    {
      currentRating = 0;
      voteCount = 0;
    }
    else
    {
      voteCount = selectedMovie.Ratings.Count();
      voteLabel = voteCount > 1 ? "Votes" : "Vote";
      //Get the current average rating
      currentRating = selectedMovie.Ratings.Sum() / voteCount;
    }
  }

  void SubmitRating(int rating)
  {
    //Update the rating
    MovieService.AddRating(selectedMovieId, rating);
    SelectMovie(selectedMovieId);
  }
}
